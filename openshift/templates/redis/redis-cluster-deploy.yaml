# Based on:
#  - https://github.com/bcgov/common-hosted-email-service/blob/master/openshift/redis-cluster.dc.yaml
#  - https://github.com/bcgov/common-hosted-email-service/blob/master/openshift/redis.secret.yaml

# Setup and Troubleshooting Guides:
#  - Cluster requires one time initialization.
#   - TODO: Automate the cluster initialization process.
#  - https://gist.github.com/jujaga/7048148a7c960d6a910ff29f33565407
#  - https://github.com/bcgov/common-service-showcase/wiki/Redis-Troubleshooting

# ==================================================
# Troubleshooting
# ==================================================
# Resync the Redis Cluster
# --------------------------------------------------
#  export INSTANCE=<YOURINSTANCE>
#  export NAMESPACE=<YOURNAMESPACE>
#  oc get pods -n $NAMESPACE -l statefulset=redis-$INSTANCE -o jsonpath='{range.items[*]}{.status.podIP} 6379 {end}' | xargs -n2 oc exec -n $NAMESPACE -i redis-$INSTANCE-0 -- redis-cli -c CLUSTER MEET
# --------------------------------------------------
# Redis Cluster Info
# --------------------------------------------------
#  oc exec -n $NAMESPACE -i redis-$INSTANCE-0 -- redis-cli -c CLUSTER INFO
# --------------------------------------------------
# Redis Cluster Nodes
# --------------------------------------------------
#  oc exec -n $NAMESPACE -i redis-$INSTANCE-0 -- redis-cli -c CLUSTER NODES
# ==================================================

# TODO List:
#   - Automate the cluster initialization process:
#     export INSTANCE=<YOURINSTANCE>
#     export NAMESPACE=<YOURNAMESPACE>
#     oc exec -n $NAMESPACE -it redis-$INSTANCE-0 -- redis-cli -a $(oc get secret -n $NAMESPACE redis-$INSTANCE -o jsonpath='{.data.password}' | base64 -d) --cluster create --cluster-replicas 1 $(oc get pods -n $NAMESPACE -l statefulset=redis-$INSTANCE -o jsonpath='{range.items[*]}{.status.podIP}:6379 {end}')
#
#   - Decouple the image from the DC.
#     - Manage the image in the tools project with deployment environment tags.
---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Redis in Cluster mode, with persistent storage.
    iconClass: icon-redis
    openshift.io/display-name: Redis Cluster (Persistent)
    openshift.io/long-description: This template deploys a HA Redis Cluster with persistent storage.
    tags: redis
  name: ${NAME}-cluster
labels:
  app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
  app.kubernetes.io/component: redis
  app.kubernetes.io/instance: ${INSTANCE}
  app.kubernetes.io/name: redis
  app.kubernetes.io/managed-by: template
  app.kubernetes.io/part-of: ${APP_NAME}${INSTANCE_DELIMITER}${INSTANCE}
  app.kubernetes.io/version: "6"
  template: ${NAME}-cluster-template
objects:

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-${NAME}${INSTANCE_DELIMITER}${INSTANCE}-to-${NAME}${INSTANCE_DELIMITER}${INSTANCE}-cluster
    spec:
      # Allow Redis pods to talk to its cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
                  statefulset: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
                  role: ${ROLE}
      podSelector:
        matchLabels:
          app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
          statefulset: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
          role: ${ROLE}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
    stringData:
      clustermode: ${CLUSTER_MODE}
      password: ${PASSWORD}
      connection-string : ${PROTOCOL}://${USERNAME}:${PASSWORD}@${NAME}${INSTANCE_DELIMITER}${INSTANCE}:${REDIS_PORT}
      redis.conf: |
        appendonly ${APPEND_ONLY}
        cluster-enabled ${CLUSTER_MODE}
        cluster-require-full-coverage no
        cluster-node-timeout 15000
        cluster-config-file /data/nodes.conf
        cluster-migration-barrier 1
        masterauth ${PASSWORD}
        masteruser ${USERNAME}
        protected-mode no
        requirepass ${PASSWORD}
        save 900 1
        save 300 10
        save 60 10000
    type: Opaque

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
    data:
      update-ip.sh: |
        #!/bin/sh
        CLUSTER_CONFIG=/data/nodes.conf
        if [ -f $CLUSTER_CONFIG ]; then
          if [ -z $POD_IP ]; then
            echo Unable to determine Pod IP address!
            exit 1
          fi
          echo Updating my IP to $POD_IP in $CLUSTER_CONFIG
          sed -i.bak -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$POD_IP/" $CLUSTER_CONFIG
        fi
        exec $@

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
    spec:
      ports:
        - name: redis
          port: ${{REDIS_PORT}}
          targetPort: ${{REDIS_PORT}}
        - name: gossip
          port: ${{GOSSIP_PORT}}
          targetPort: ${{GOSSIP_PORT}}
      selector:
        app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
        statefulset: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}

  - kind: StatefulSet
    apiVersion: apps/v1
    metadata:
      name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
    spec:
      podManagementPolicy: Parallel
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          statefulset: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
      serviceName: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
      template:
        metadata:
          labels:
            app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
            app.kubernetes.io/component: redis
            app.kubernetes.io/instance: ${INSTANCE}
            app.kubernetes.io/name: redis
            app.kubernetes.io/managed-by: template
            app.kubernetes.io/part-of: ${APP_NAME}${INSTANCE_DELIMITER}${INSTANCE}
            app.kubernetes.io/version: "6"
            role: ${ROLE}
            statefulset: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      values:
                      - ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
                      operator: In
                  topologyKey: kubernetes.io/hostname
          containers:
            - name: redis
              image: ${IMAGE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              command:
                - /script/update-ip.sh
                - redis-server
                - /conf/redis.conf
              env:
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: REDISCLI_AUTH
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - redis-cli -h $HOSTNAME shutdown save
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - test $(redis-cli -h $HOSTNAME ping) == PONG
                initialDelaySeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
              ports:
                - containerPort: ${{REDIS_PORT}}
                  name: redis
                - containerPort: ${{GOSSIP_PORT}}
                  name: gossip
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - test $(redis-cli -h $HOSTNAME ping) == PONG
                initialDelaySeconds: 15
                timeoutSeconds: 1
                failureThreshold: 3
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: conf
                  mountPath: /conf
                  readOnly: false
                - name: data
                  mountPath: /data
                  readOnly: false
                - name: script
                  mountPath: /script
                  readOnly: false
          volumes:
            - name: conf
              secret:
                secretName: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
            - name: script
              configMap:
                name: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
                defaultMode: 0755
      volumeClaimTemplates:
        - metadata:
            name: data
            labels:
              app: ${NAME}${INSTANCE_DELIMITER}${INSTANCE}
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: ${PVC_SIZE}
          storageClassName: ${STORAGE_CLASS}

parameters:
  - name: NAME
    description: The name of the application for labelling all artifacts.
    displayName: Application Name
    required: true
    value: redis
  - name: INSTANCE_DELIMITER
    displayName: Instance Delimiter
    description: The delimiter used between the name and the instance.
    required: false
    value: "-"
  - name: INSTANCE
    description: The name of this instance of the application
    displayName: Application Instance Name
    required: true
    value: shared

  - name: APP_NAME
    description: The name of the application which will use this.
    displayName: Application client name
    required: true
    value: redis
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies.
    required: true
    value: redis

  - name: APPEND_ONLY
    # https://redis.io/topics/persistence
    description: The file format mode that Redis will save in (no for RDB, yes for AOF)
    displayName: Redis Persistence Mode
    required: true
    value: "no"
  - name: CLUSTER_MODE
    # https://redis.io/topics/cluster-tutorial
    description: Run Redis in standalone mode or in cluster mode
    displayName: Redis Cluster Mode
    required: true
    value: "yes"

  - name: USERNAME
    description: Username of the application database
    displayName: Application Database Username
    required: true
    generate: expression
    from: "User_[a-zA-Z0-9]{10}"
    value: default
  - name: PASSWORD
    description: Password of the application database
    displayName: Application Database Password
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: PROTOCOL
    description: The communication protocol to use.
    displayName: Protocol
    required: true
    value: redis
  - name: REDIS_PORT
    description: Redis Port
    displayName: Redis Port
    required: true
    value: "6379"
  - name: GOSSIP_PORT
    description: Gossip Port
    displayName: Gossip Port
    required: true
    value: "16379"

  - name: REPLICAS
    description: The number of StatefulSet replicas to use.
    displayName: Replicas
    required: true
    value: "6"
  - name: IMAGE_REGISTRY
    description: The base docker registry
    displayName: Docker Image Registry
    required: true
    value: docker.io
  - name: IMAGE_NAME
    description: Redis Image Name
    displayName: Image Name
    required: true
    value: redis
  - name: IMAGE_TAG
    description: Redis Image Tag
    displayName: Image Tag
    required: true
    value: 7-alpine

  - name: PVC_SIZE
    description: The size of the persistent volume to create.
    displayName: Persistent Volume Size
    required: true
    value: 512Mi
  - name: STORAGE_CLASS
    description: The type of the persistent volume to create.
    displayName: Persistent Volume Class
    required: true
    value: netapp-file-standard

  - name: CPU_REQUEST
    description: Starting amount of CPU the container can use.
    displayName: CPU Request
    required: true
    value: 25m
  - name: CPU_LIMIT
    description: Maximum amount of CPU the container can use.
    displayName: CPU Limit
    required: true
    value: 100m
  - name: MEMORY_REQUEST
    description: Starting amount of memory the container can use.
    displayName: Memory Request
    required: true
    value: 64Mi
  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
    value: 256Mi

  - name: TAG_NAME
    description:
    displayName:
    required: true
    value: dev
  - name: NAMESPACE_NAME
    description:
    displayName:
    required: true
    value: e79518